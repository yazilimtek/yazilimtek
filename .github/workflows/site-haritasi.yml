name: Generate Sitemap and Deploy Pages

on:
  push:
    branches:
      - master  # Değiştirebilirsiniz, deploy işlemi bu dala yapılan her push'ta çalışacak

jobs:
  generate-sitemap-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Burada site haritasını oluşturmak için gerekli adımları ekleyin
      - name: Generate Sitemap
        run: |
          echo '<?xml version="1.0" encoding="UTF-8"?>' > sitemap.xml
          echo '<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">' >> sitemap.xml
          # Burada site haritası oluşturma komutlarını ekleyin
          # Örneğin:
          # find . \( -path "./blog" -o -path "./pages" \) -prune -o -type f -name "*.html" -exec sh -c 'echo "<url><loc>https://yazilimteknisyeni.com.tr/${1//\//}<loc></url>"' _ {} \; >> sitemap.xml
          echo '</urlset>' >> sitemap.xml

      - name: Upload Sitemap Artifact
        uses: actions/upload-artifact@v4
        with:
          name: sitemap  # Artifakt adını burada belirtin, bu adı daha sonra kullanacağız
          path: sitemap.xml  # Sitemap dosyasının yolunu belirtin

      # Statik dosyaları oluşturmak veya hazırlamak için gerekli adımları ekleyin

      - name: Deploy to GitHub Pages
        uses: actions/upload-artifact@v4
        with:
          artifact-name: sitemap  # Yukarıda belirtilen artifakt adını buraya ekleyin
          token: ${{ secrets.GITHUB_TOKEN }}  # GitHub token'ını kullanarak oturum açın
          path: sitemap.xml  # Sitemap dosyasının yolunu belirtin
          # Opsiyonel: Aşağıdaki satırları kullanarak isteğe bağlı parametreleri belirleyebilirsiniz
          # branch: gh-pages  # Yayınlamak istediğiniz dalı belirtin, varsayılan olarak "gh-pages" kullanılır
          # folder: path/to/pages  # Sayfaların bulunduğu klasörün yolu, varsayılan olarak repository kökü kullanılır
          # commit-message: Update Sitemap  # Commit mesajını özelleştirin, varsayılan olarak "Deploy to GitHub Pages" kullanılır
